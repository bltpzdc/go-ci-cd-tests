name: Deploy Documentation

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual triggers

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  generate-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install pkgsite
        run: go install golang.org/x/pkgsite/cmd/pkgsite@latest

      - name: Generate static documentation
        run: |
          # Create documentation directory
          mkdir -p public
          
          # Start pkgsite in background to generate static files
          pkgsite -static ./public -http=localhost:8080 .
          
          # Wait a bit for files to generate, then create index
          sleep 10
          
          # Create a nice landing page
          cat > public/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Project Documentation</title>
              <style>
                  body {
                      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
                      max-width: 800px;
                      margin: 0 auto;
                      padding: 40px 20px;
                      line-height: 1.6;
                      color: #24292e;
                  }
                  header {
                      text-align: center;
                      margin-bottom: 40px;
                      border-bottom: 1px solid #e1e4e8;
                      padding-bottom: 20px;
                  }
                  h1 {
                      color: #0366d6;
                  }
                  .packages {
                      background: #f6f8fa;
                      border-radius: 6px;
                      padding: 20px;
                      margin: 20px 0;
                  }
                  .package-link {
                      display: block;
                      padding: 8px 12px;
                      margin: 5px 0;
                      background: white;
                      border: 1px solid #e1e4e8;
                      border-radius: 4px;
                      text-decoration: none;
                      color: #0366d6;
                  }
                  .package-link:hover {
                      background: #0366d6;
                      color: white;
                  }
                  .info {
                      background: #d1ecf1;
                      border: 1px solid #bee5eb;
                      border-radius: 4px;
                      padding: 15px;
                      margin: 20px 0;
                  }
              </style>
          </head>
          <body>
              <header>
                  <h1>üìö Project Documentation</h1>
                  <p>Automatically generated from Go source code</p>
              </header>
              
              <div class="info">
                  <strong>üìù Note:</strong> This documentation is automatically updated on every commit to main branch.
              </div>
              
              <h2>üì¶ Available Packages</h2>
              <div class="packages">
                  <a href="/cmd" class="package-link">üìÅ cmd - Main application package</a>
                  <a href="/internal/model" class="package-link">üìÅ internal/model - Data models and structures</a>
              </div>
              
              <h2>üîó External Links</h2>
              <ul>
                  <li><a href="https://pkg.go.dev/github.com/${{ github.repository }}">View on pkg.go.dev</a></li>
                  <li><a href="https://github.com/${{ github.repository }}">GitHub Repository</a></li>
              </ul>
              
              <footer style="margin-top: 40px; text-align: center; color: #6a737d;">
                  <p>Last updated: <span id="date"></span></p>
              </footer>
              
              <script>
                  document.getElementById('date').textContent = new Date().toLocaleString();
              </script>
          </body>
          </html>
          EOF

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: generate-docs
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3